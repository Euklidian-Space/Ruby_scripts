quit
other.set
self.set
result
quit
set
new_set
quit
@set
quit
@set
set
obj
setA
quit
arrayA
n
setB
setA
quit
arrayA
n
quit
arrayB
arrayA
n
quit
n
setA
quit
setB
setA
quit
setB.set
setA.set
quit
setB.set
setA.set
setA
n
quit
n
arrayB
arrayA
index
n
quit
setA == setB
setB
setA
quit
index
n
index
n
arrayB
arrayA
index
n
quit
index
n
quit
n
index
n
arrayB
array
arrayA
n
quit
n
setB.set
setA.set
setA.set == setB.set
setA.set
setA
setA == setB
quit
setA == setB
quit
setA == setB
quit
setA == setB
quit
n
nn
n
check
n
objB
objA
check
n
check
n
check
n
check
n
quit
end
n
objA
n
objB
n
objA
n
objA
n
objA
n
objA
n
objB
objA
a
n
a
objB
objA
n
objA.is_a?(Array)
n
quit
setA == setB
setB
setA
quit
setA == setB
setA
setB
n
quit
setA == setB
setA
setB
n
quit
objA
n
index
n
objB
objA
n
objB
objA
quit
objA
n
index
n
index
n
objA
index
n
objB.is_a?(Array)
objB
objA
a
index
n
quit
index
n
objA
quit
continue
objA
