c
count
_next
c
n
count
_next
n
count
n
_next
n
_next
n
count
n
_next
n
_next
first
n
count
n
hare.peek
n
c
n
count
n
hare
seq
quit
d
cycle_count(digit_split((1.0 / d).to_s[2..-1].to_i))
c
accum
n
accum
c
continue
accum
seq
quit
continue
n
count
n
perm
quit
perm
n
perm
quit
perm
continue
perm
n
s
perm
n
perm
n
perm
n
perm[j]
j
n
perm[i]
i
n
perm
quit
continue
quit
n
quit
n
num
continue
n
names
n
quit
result
ledger
num
continue
ledger
num
n
num
quit
continue
cal['sep']
cal.select { |k,v| v.first == 0 }
cal
cal['jan']
cal['feb']
cal['feb'].length
ca
n
cal['feb'].length
n
continue
n
is_leap? year
n
continue
n
max_sum
n
arr
continue
max_sum
n
quit
max_sum
arr.length
row_num
n
arr
quit
arr
sum_arr
n
sum_arr
n
sum_arr
arr
n
quit()
mem
n
sum_arr
n
arr.last
sum_arr
arr
continue
group % 100
word
n
group
n
continue
group
n
groups
continue
groups
continue
n
group
n
word
n
word
n
groups.length
groups
quit
stop
continue
n
j
n
j
n
quit
num
n
result
n
num
result
n
num
result
n
result
n
result
n
num
n
num
result
n
num
continue
quit
n
quit
n
quit
product
n
curr_product
counter
n
counter
n
counter
n
arr[i]
curr_product
n
product
n
curr_product
counter
arr[i]
n
counter
curr_product
n
counter
arr[i]
curr_product
n
curr_product
counter
arr[i]
n
quit
counter
n
arr[i]
n
curr_product
arr[i]
n
arr[i]
n
quit
debug
h
stop
quit
continue
arr[i]
curr_product
product
curr_product
n
counter
n
counter
n
counter
curr_product
n
curr_product
arr[i]
counter
n
